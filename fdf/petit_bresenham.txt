static void	iso_projection(t_data *data, t_point *point, int i, int j)
{
	int	x;
	int	y;
	int	x2;
	int	y2;

	x = j * 50;
	y = i * 50;
	point->x = ((x - y) * cos(0.523599)) + data->map->x_offset;
	point->y = (x + y) * sin(0.523599) - data->map->tab[i][j];
	point->y += data->map->y_offset;
	x2 = (j + 1) * 50;
	y2 = (i + 1) * 50;
	point->x2 = ((x2 - y2) * cos(0.523599)) + data->map->x_offset;
	point->y2 = (x2 + y2) * sin(0.523599) - data->map->tab[i][j + 1];
	point->y2 += data->map->y_offset;
}

static void	get_coor(t_point *point)
{
	point->dx = point->x2 - point->x;
	point->dy = point->y2 - point->y;
	point->err = point->dx - point->dy;
	if (point->dx < 0)
		point->sx = -1;
	else
		point->sx = 1;
	if (point->sy < 0)
		point->sy = -1;
	else
		point->sy = 1;
}

static void	draw_line_v(t_data *data, t_point *point)
{
	int	x;

	if (point->y > point->y2)
	{
		ft_swap(&point->x, &point->x2);
		ft_swap(&point->y, &point->y2);
	}
	point->dx = point->x2 - point->x;
	point->dy = point->y2 - point->y;
	point->err = point->dx * 2 - point->dy;
	x = point->x;
	while (point->y != point->y2)
	{
		mlx_pixel_put(data->mlx, data->win, point->x, point->y, 0xFFFFFF);
		if (point->err >= 0)
		{
			x + point->sx;
			point->err -= (point->dy * 2);
		}
		point->err += (point->dy * 2);
		point->y++;
	}
}

static void	draw_line_h(t_data *data, t_point *point)
{
	int	y;

	if (point->x > point->x2)
	{
		ft_swap(&point->x, &point->x2);
		ft_swap(&point->y, &point->y2);
	}
	point->dx = point->x2 - point->x;
	point->dy = point->y2 - point->y;
	point->err = point->dx * 2 - point->dy;
	y = point->y;
	while (point->x != point->x2)
	{
		mlx_pixel_put(data->mlx, data->win, point->x, point->y, 0xFFFFFF);
		if (point->err >= 0)
		{
			y + point->sy;
			point->err -= (point->dx * 2);
		}
		point->err += (point->dx * 2);
		point->x++;
	}
}

void	bressenham(t_data *data)
{
	t_point	point;
	int		i;
	int		j;

	i = 0;
	while (i < data->map->height)
	{
		j = 0;
		while (j < data->map->width)
		{
			iso_projection(data, &point, i, j);
			get_coor(&point);
			draw_line_h(data, &point);
			draw_line_v(data, &point);
			j++;
		}
		i++;
	}
}
